import java.lang.String
var String remoteLastUpdate
var String remoteLastUpdateSZ

rule "Hue Remote Flur"
when
    Item Hue_Remote_Flur changed 
then
    logInfo("remote.rules", "Remote Input: " + Hue_Remote_Flur.state.toString)
    var String state = Hue_Remote_Flur.state.toString.split("-RMT-").get(0) 
    var String timestamp = Hue_Remote_Flur.state.toString.split("-RMT-").get(1)
    if ( timestamp != remoteLastUpdate ) {
        logInfo("remote.rules", "Remote: New Command " + state)
        //sendBroadcastNotification("Remote: New Command " + state)
        switch state {
            case "1000": {
                logInfo("remote.rules", "Remote: On / Short - Case 1000")
                HUE_MODE_WZ.sendCommand(100)
                HUE_MODE_WZ_CT.sendCommand(70)
        	}
            case "1002": {
                logInfo("remote.rules", "Remote: On / Short")
                HUE_MODE_WZ.sendCommand(100)
                HUE_MODE_WZ_CT.sendCommand(70)
        	}
            case "1003": {
                logInfo("remote.rules", "Remote: On / Long")
                HUE_MODE_WZ.sendCommand(100)
                HUE_MODE_WZ_CT.sendCommand(70)
                SW_SETTINGS_FERNSEHEN.sendCommand("ON")
        	}
			case "2002": {
                logInfo("remote.rules", "Remote: Dim up / Short")
                SWITCH_ALARM_SYSTEM.sendCommand("OFF")
            }
            case "2003": {
                logInfo("remote.rules", "Remote: Dim up / Long")
                SWITCH_ALARM_SYSTEM.sendCommand("OFF")
            }
			case "3002": {
                logInfo("remote.rules", "Remote: Dim down / Short")
                HUE_MODE_WZ.sendCommand("OFF")
            }
            case "3003": {
                logInfo("remote.rules", "Remote: Dim down / Long")
                HUE_MODE_WZ.sendCommand("OFF")
            }
            case "4000": {
                logInfo("remote.rules", "Remote: Off / Short - Case 4000")
                SW_SETTINGS_FERNSEHEN.sendCommand("OFF")
				HUE_MODE_ALL.sendCommand("OFF")
        	}
			case "4002": {
                logInfo("remote.rules", "Remote: Off / Short")
                SW_SETTINGS_FERNSEHEN.sendCommand("OFF")
				HUE_MODE_ALL.sendCommand("OFF")
        	}
            case "4003": {
                logInfo("remote.rules", "Remote: Off / Long")
                SW_SETTINGS_FERNSEHEN.sendCommand("OFF")
				HUE_MODE_ALL.sendCommand("OFF")
                SWITCH_ALARM_SYSTEM.sendCommand("ON")
        	}
        }
        remoteLastUpdate = timestamp
    }
end

rule "Hue Remote Schlafzimmer"
when
    Item Hue_Remote_SZ changed 
then
    logInfo("remote.rules", "Remote SZ Input: " + Hue_Remote_SZ.state.toString)
    var String state = Hue_Remote_SZ.state.toString.split("-RMT-").get(0) 
    var String timestamp = Hue_Remote_SZ.state.toString.split("-RMT-").get(1)
    if ( timestamp != remoteLastUpdateSZ ) {
        logInfo("remote.rules", "Remote SZ: New Command " + state)
        switch state {
            case "1000": {
                logInfo("remote.rules", "Remote SZ: Bright")
                var HSBType command = new HSBType(new DecimalType(0), new PercentType(10), new PercentType(100))
                HUE_MODE_SZ.sendCommand(command)
        	}
            case "1002": {
                logInfo("remote.rules", "Remote SZ: Bright")
                var HSBType command = new HSBType(new DecimalType(0), new PercentType(10), new PercentType(100))
                HUE_MODE_SZ.sendCommand(command)
        	}
            case "1003": {
                logInfo("remote.rules", "Remote SZ: Bright")
                var HSBType command = new HSBType(new DecimalType(0), new PercentType(10), new PercentType(100))
                HUE_MODE_SZ.sendCommand(command)
        	}
			case "2002": {
                logInfo("remote.rules", "Remote SZ: Reading")
                var HSBType command = new HSBType(new DecimalType(0), new PercentType(20), new PercentType(50))
                HUE_MODE_SZ.sendCommand(command)
            }
            case "2003": {
                logInfo("remote.rules", "Remote SZ: Reading")
                var HSBType command = new HSBType(new DecimalType(0), new PercentType(20), new PercentType(50))
                HUE_MODE_SZ.sendCommand(command)
            }
			case "3002": {
                logInfo("remote.rules", "Remote SZ: Romance")
                var HSBType command = new HSBType(new DecimalType(0), new PercentType(100), new PercentType(25))
                HUE_MODE_SZ.sendCommand(command)
            }
            case "3003": {
                logInfo("remote.rules", "Remote SZ: Romance")
                var HSBType command = new HSBType(new DecimalType(0), new PercentType(100), new PercentType(25))
                HUE_MODE_SZ.sendCommand(command)
            }
            case "4000": {
                logInfo("remote.rules", "Remote SZ: Off")
                HUE_MODE_SZ.sendCommand("OFF")
        	}
            case "4002": {
                logInfo("remote.rules", "Remote SZ: Off")
                HUE_MODE_SZ.sendCommand("OFF")
        	}
            case "4003": {
                logInfo("remote.rules", "Remote SZ: Off")
                HUE_MODE_SZ.sendCommand("OFF")
        	}
        }
        remoteLastUpdateSZ = timestamp
    }
end
